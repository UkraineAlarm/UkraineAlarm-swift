//
// AlertsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AlertsAPI {
    /**
     Області, регіони та громади з тривогами

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV3AlertsGet(completion: @escaping ((_ data: [AlertRegionModel]?,_ error: Error?) -> Void)) {
        apiV3AlertsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Області, регіони та громади з тривогами
     - GET /api/v3/alerts
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Token
     - examples: [{contentType=application/json, example=[ {
  "regionId" : "regionId",
  "regionType" : "State",
  "regionEngName" : "regionEngName",
  "regionName" : "regionName",
  "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
  "activeAlerts" : [ {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  }, {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  } ]
}, {
  "regionId" : "regionId",
  "regionType" : "State",
  "regionEngName" : "regionEngName",
  "regionName" : "regionName",
  "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
  "activeAlerts" : [ {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  }, {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  } ]
} ]}]

     - returns: RequestBuilder<[AlertRegionModel]> 
     */
    open class func apiV3AlertsGetWithRequestBuilder() -> RequestBuilder<[AlertRegionModel]> {
        let path = "/api/v3/alerts"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[AlertRegionModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Отримати останніх 25 тривог регіону

     - parameter regionId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV3AlertsRegionHistoryGet(regionId: String? = nil, completion: @escaping ((_ data: [RegionAlarmsHistory]?,_ error: Error?) -> Void)) {
        apiV3AlertsRegionHistoryGetWithRequestBuilder(regionId: regionId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Отримати останніх 25 тривог регіону
     - GET /api/v3/alerts/regionHistory
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Token
     - examples: [{contentType=application/json, example=[ {
  "regionId" : "regionId",
  "regionName" : "regionName",
  "alarms" : [ {
    "duration" : {
      "milliseconds" : 5,
      "hours" : 1,
      "seconds" : 2,
      "totalDays" : 7.061401241503109,
      "ticks" : 0,
      "totalHours" : 9.301444243932576,
      "totalMilliseconds" : 3.616076749251911,
      "totalMinutes" : 2.027123023002322,
      "minutes" : 5,
      "days" : 6,
      "totalSeconds" : 4.145608029883936
    },
    "alertType" : "UNKNOWN",
    "regionId" : "regionId",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "regionName" : "regionName",
    "isContinue" : true,
    "startDate" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "duration" : {
      "milliseconds" : 5,
      "hours" : 1,
      "seconds" : 2,
      "totalDays" : 7.061401241503109,
      "ticks" : 0,
      "totalHours" : 9.301444243932576,
      "totalMilliseconds" : 3.616076749251911,
      "totalMinutes" : 2.027123023002322,
      "minutes" : 5,
      "days" : 6,
      "totalSeconds" : 4.145608029883936
    },
    "alertType" : "UNKNOWN",
    "regionId" : "regionId",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "regionName" : "regionName",
    "isContinue" : true,
    "startDate" : "2000-01-23T04:56:07.000+00:00"
  } ]
}, {
  "regionId" : "regionId",
  "regionName" : "regionName",
  "alarms" : [ {
    "duration" : {
      "milliseconds" : 5,
      "hours" : 1,
      "seconds" : 2,
      "totalDays" : 7.061401241503109,
      "ticks" : 0,
      "totalHours" : 9.301444243932576,
      "totalMilliseconds" : 3.616076749251911,
      "totalMinutes" : 2.027123023002322,
      "minutes" : 5,
      "days" : 6,
      "totalSeconds" : 4.145608029883936
    },
    "alertType" : "UNKNOWN",
    "regionId" : "regionId",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "regionName" : "regionName",
    "isContinue" : true,
    "startDate" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "duration" : {
      "milliseconds" : 5,
      "hours" : 1,
      "seconds" : 2,
      "totalDays" : 7.061401241503109,
      "ticks" : 0,
      "totalHours" : 9.301444243932576,
      "totalMilliseconds" : 3.616076749251911,
      "totalMinutes" : 2.027123023002322,
      "minutes" : 5,
      "days" : 6,
      "totalSeconds" : 4.145608029883936
    },
    "alertType" : "UNKNOWN",
    "regionId" : "regionId",
    "endDate" : "2000-01-23T04:56:07.000+00:00",
    "regionName" : "regionName",
    "isContinue" : true,
    "startDate" : "2000-01-23T04:56:07.000+00:00"
  } ]
} ]}]
     - parameter regionId: (query)  (optional)

     - returns: RequestBuilder<[RegionAlarmsHistory]> 
     */
    open class func apiV3AlertsRegionHistoryGetWithRequestBuilder(regionId: String? = nil) -> RequestBuilder<[RegionAlarmsHistory]> {
        let path = "/api/v3/alerts/regionHistory"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "regionId": regionId
        ])


        let requestBuilder: RequestBuilder<[RegionAlarmsHistory]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Статус області/регіону/громади

     - parameter regionId: (path) ID області/регіону/громади 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV3AlertsRegionIdGet(regionId: String, completion: @escaping ((_ data: [AlertRegionModel]?,_ error: Error?) -> Void)) {
        apiV3AlertsRegionIdGetWithRequestBuilder(regionId: regionId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Статус області/регіону/громади
     - GET /api/v3/alerts/{regionId}
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Token
     - examples: [{contentType=application/json, example=[ {
  "regionId" : "regionId",
  "regionType" : "State",
  "regionEngName" : "regionEngName",
  "regionName" : "regionName",
  "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
  "activeAlerts" : [ {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  }, {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  } ]
}, {
  "regionId" : "regionId",
  "regionType" : "State",
  "regionEngName" : "regionEngName",
  "regionName" : "regionName",
  "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
  "activeAlerts" : [ {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  }, {
    "regionId" : "regionId",
    "lastUpdate" : "2000-01-23T04:56:07.000+00:00",
    "type" : "UNKNOWN"
  } ]
} ]}]
     - parameter regionId: (path) ID області/регіону/громади 

     - returns: RequestBuilder<[AlertRegionModel]> 
     */
    open class func apiV3AlertsRegionIdGetWithRequestBuilder(regionId: String) -> RequestBuilder<[AlertRegionModel]> {
        var path = "/api/v3/alerts/{regionId}"
        let regionIdPreEscape = "\(regionId)"
        let regionIdPostEscape = regionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{regionId}", with: regionIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[AlertRegionModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Перевірка номеру останньої дії. Використовувати для перевірки необхідності оновлювати дані

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV3AlertsStatusGet(completion: @escaping ((_ data: AlertModification?,_ error: Error?) -> Void)) {
        apiV3AlertsStatusGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Перевірка номеру останньої дії. Використовувати для перевірки необхідності оновлювати дані
     - GET /api/v3/alerts/status
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Token
     - examples: [{contentType=application/json, example={
  "lastActionIndex" : 0
}}]

     - returns: RequestBuilder<AlertModification> 
     */
    open class func apiV3AlertsStatusGetWithRequestBuilder() -> RequestBuilder<AlertModification> {
        let path = "/api/v3/alerts/status"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AlertModification>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
